// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: service.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines int32 `protobuf:"varint,1,opt,name=lines,proto3" json:"lines,omitempty"`
}

func (x *LogStreamRequest) Reset() {
	*x = LogStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStreamRequest) ProtoMessage() {}

func (x *LogStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStreamRequest.ProtoReflect.Descriptor instead.
func (*LogStreamRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *LogStreamRequest) GetLines() int32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

type LogStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *LogStreamResponse) Reset() {
	*x = LogStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStreamResponse) ProtoMessage() {}

func (x *LogStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStreamResponse.ProtoReflect.Descriptor instead.
func (*LogStreamResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *LogStreamResponse) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type SendCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *SendCommandRequest) Reset() {
	*x = SendCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandRequest) ProtoMessage() {}

func (x *SendCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandRequest.ProtoReflect.Descriptor instead.
func (*SendCommandRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *SendCommandRequest) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type SendCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendCommandResponse) Reset() {
	*x = SendCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponse) ProtoMessage() {}

func (x *SendCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponse.ProtoReflect.Descriptor instead.
func (*SendCommandResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x28, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22,
	0x27, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x95, 0x01, 0x0a, 0x0c, 0x51, 0x75,
	0x4d, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0a, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_service_proto_goTypes = []interface{}{
	(*LogStreamRequest)(nil),    // 0: grpc.LogStreamRequest
	(*LogStreamResponse)(nil),   // 1: grpc.LogStreamResponse
	(*SendCommandRequest)(nil),  // 2: grpc.SendCommandRequest
	(*SendCommandResponse)(nil), // 3: grpc.SendCommandResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: grpc.QuMineServer.StreamLogs:input_type -> grpc.LogStreamRequest
	2, // 1: grpc.QuMineServer.SendCommand:input_type -> grpc.SendCommandRequest
	1, // 2: grpc.QuMineServer.StreamLogs:output_type -> grpc.LogStreamResponse
	3, // 3: grpc.QuMineServer.SendCommand:output_type -> grpc.SendCommandResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QuMineServerClient is the client API for QuMineServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuMineServerClient interface {
	StreamLogs(ctx context.Context, in *LogStreamRequest, opts ...grpc.CallOption) (QuMineServer_StreamLogsClient, error)
	SendCommand(ctx context.Context, in *SendCommandRequest, opts ...grpc.CallOption) (QuMineServer_SendCommandClient, error)
}

type quMineServerClient struct {
	cc grpc.ClientConnInterface
}

func NewQuMineServerClient(cc grpc.ClientConnInterface) QuMineServerClient {
	return &quMineServerClient{cc}
}

func (c *quMineServerClient) StreamLogs(ctx context.Context, in *LogStreamRequest, opts ...grpc.CallOption) (QuMineServer_StreamLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QuMineServer_serviceDesc.Streams[0], "/grpc.QuMineServer/StreamLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &quMineServerStreamLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QuMineServer_StreamLogsClient interface {
	Recv() (*LogStreamResponse, error)
	grpc.ClientStream
}

type quMineServerStreamLogsClient struct {
	grpc.ClientStream
}

func (x *quMineServerStreamLogsClient) Recv() (*LogStreamResponse, error) {
	m := new(LogStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *quMineServerClient) SendCommand(ctx context.Context, in *SendCommandRequest, opts ...grpc.CallOption) (QuMineServer_SendCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QuMineServer_serviceDesc.Streams[1], "/grpc.QuMineServer/SendCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &quMineServerSendCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QuMineServer_SendCommandClient interface {
	Recv() (*SendCommandResponse, error)
	grpc.ClientStream
}

type quMineServerSendCommandClient struct {
	grpc.ClientStream
}

func (x *quMineServerSendCommandClient) Recv() (*SendCommandResponse, error) {
	m := new(SendCommandResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QuMineServerServer is the server API for QuMineServer service.
type QuMineServerServer interface {
	StreamLogs(*LogStreamRequest, QuMineServer_StreamLogsServer) error
	SendCommand(*SendCommandRequest, QuMineServer_SendCommandServer) error
}

// UnimplementedQuMineServerServer can be embedded to have forward compatible implementations.
type UnimplementedQuMineServerServer struct {
}

func (*UnimplementedQuMineServerServer) StreamLogs(*LogStreamRequest, QuMineServer_StreamLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamLogs not implemented")
}
func (*UnimplementedQuMineServerServer) SendCommand(*SendCommandRequest, QuMineServer_SendCommandServer) error {
	return status.Errorf(codes.Unimplemented, "method SendCommand not implemented")
}

func RegisterQuMineServerServer(s *grpc.Server, srv QuMineServerServer) {
	s.RegisterService(&_QuMineServer_serviceDesc, srv)
}

func _QuMineServer_StreamLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QuMineServerServer).StreamLogs(m, &quMineServerStreamLogsServer{stream})
}

type QuMineServer_StreamLogsServer interface {
	Send(*LogStreamResponse) error
	grpc.ServerStream
}

type quMineServerStreamLogsServer struct {
	grpc.ServerStream
}

func (x *quMineServerStreamLogsServer) Send(m *LogStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _QuMineServer_SendCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SendCommandRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QuMineServerServer).SendCommand(m, &quMineServerSendCommandServer{stream})
}

type QuMineServer_SendCommandServer interface {
	Send(*SendCommandResponse) error
	grpc.ServerStream
}

type quMineServerSendCommandServer struct {
	grpc.ServerStream
}

func (x *quMineServerSendCommandServer) Send(m *SendCommandResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _QuMineServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.QuMineServer",
	HandlerType: (*QuMineServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamLogs",
			Handler:       _QuMineServer_StreamLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendCommand",
			Handler:       _QuMineServer_SendCommand_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}
